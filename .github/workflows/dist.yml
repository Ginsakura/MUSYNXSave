name: Auto Release Action
on:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - 'main'

env:
  RCVersion: < 0.0.0 PreRelease 0>
  isPreRelease: true
  Version: Init
  CommitMessage: Init

jobs:
  AutoRelease:
    name: Auto Release
    runs-on: windows-2025
    steps:
    - name: Cache and Install Python Environment
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      with:
        python-version: '3.11.5'
        cache: 'pip' # caching pip dependencies

    - name: Install requirements
      run: |
        pip3 install -r ./requirements.txt

    - name: Build Environment
      run: |
        $isPreRelease = python -c "import Version;print(Version.isPreRelease)";
        $isPreReleaseBool = [bool]::Parse($isPreRelease);
        if ($isPreReleaseBool) { 
            $version = py -c "import Version; print(Version.preVersion)";
            $rcVersion = $version -replace "pre", " PreRelease ";
        } else {
            $version = py -c "import Version; print(Version.version)";
            $rcVersion = $version -replace "rc", " Release ";
        }
        echo "v:'${version}',rcv:'${rcVersion}'";
        echo "isPreRelease=${isPreReleaseBool}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;
        echo "Version=${version}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;
        echo "RCVersion=< ${rcVersion} >" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;

    - name: Dist ${{ env.Version }}
      run: |
        $vc = "${{ github.event.head_commit.message }}" -split "  ";
        echo "$vc";
        echo "CommitMessage=$($vc[1])" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;
        powershell.exe ./buildLauncher.ps1;

    - name: Commit Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        name: ${{ env.RCVersion }}  ${{ env.CommitMessage }}  < Auto Release >
        tag_name: ${{ env.Version }}
        draft: false
        body_path: ${{ github.workspace }}/changelog.md
        prerelease: ${{ env.isPreRelease }}
        files: ./MusyncSaveDecode/Archive/*

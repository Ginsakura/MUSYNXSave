name: Auto Release Action
on:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - 'main'

env:
  RCVersion: < 0.0.0 PreRelease 0>
  isPreRelease: true
  Version: Init
  CommitMessage: Init

jobs:
  Install_Environment:
    name: Install Environment
    runs-on: windows-2025
    steps:
      - uses: actions/checkout@v4
      - name: Cache and Setup Python Environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.5'
          cache: 'pip' # caching pip dependencies
      - name: Install requirements
        run: pip3 install -r ./requirements.txt

  Build_Variable:
    name: Create Build Variable
    runs-on: windows-2025
    needs: Install_Environment
    steps:
      - name: Create Build Variable
        run: |
          cd C:/a/MUSYNXSave/MUSYNXSave;
          Get-ChildItem;
          $isPreRelease = python -c "import Version;print(Version.isPreRelease)";
          $isPreReleaseBool = [bool]::Parse($isPreRelease);
          if ($isPreReleaseBool) { 
              $version = py -c "import Version; print(Version.preVersion)";
              $rcVersion = $version -replace "pre", " PreRelease ";
          } else {
              $version = py -c "import Version; print(Version.version)";
              $rcVersion = $version -replace "rc", " Release ";
          }
          echo "v:'${version}',rcv:'${rcVersion}'";
          echo "isPreRelease=${isPreReleaseBool}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;
          echo "Version=${version}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;
          echo "RCVersion=< ${rcVersion} >" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;

  Build_Application:
    name: Build Application
    runs-on: windows-2025
    needs: Build_Variable
    steps:
      - name: Build ${{ env.Version }}
        run: |
          $vc = "${{ github.event.head_commit.message }}" -split "  ";
          echo "$vc";
          echo "CommitMessage=$($vc[1])" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append;
          powershell.exe ./buildLauncher.ps1;

  Commit_Build_File:
    name: Commit Build File
    runs-on: windows-2025
    needs: Build_Application
    steps:
      - uses: softprops/action-gh-release@v2
      - name: Commit Build File
        uses: ./
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          name: ${{ env.RCVersion }}  ${{ env.CommitMessage }}  < Auto Release >
          tag_name: ${{ env.Version }}
          draft: false
          body_path: ${{ github.workspace }}/changelog.md
          prerelease: ${{ env.isPreRelease }}
          files: ./MusyncSaveDecode/Archive/*
